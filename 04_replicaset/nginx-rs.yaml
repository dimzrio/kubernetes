apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: nginx-rs
  namespace: applications
  labels:
    app: webserver
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webserver
    matchExpressions:
      - { key: app, operator: In, values: [webserver, nginx-services] }
  template:
    metadata:
      name: nginx
      labels:
        app: webserver
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          ports:
            - containerPort: 80
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: httpd-rs
  namespace: applications
  labels:
    app: webserver
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webserver
    matchExpressions:
      - { key: app, operator: In, values: [webserver, httpd-services] }
  template:
    metadata:
      name: httpd
      labels:
        app: webserver
    spec:
      containers:
        - name: httpd
          image: httpd:alpine
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: webserver
  namespace: applications
spec:
  selector:
    app: webserver
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080
  type: NodePort